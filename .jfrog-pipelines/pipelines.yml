valuesFilePath: ./values.yml

pipelines:
  - name: ci_next_tasks_dev
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: dev_test_publish
        type: Bash
        configuration:
          inputResources:
            - name: jfdev_ci_commons_tasks_gitrepo
              trigger: true
          # Dynamic templating of integrations per given task.
          integrations:
            # Static integrations every task will be needing due to running publish task at the end.
            - name: {{ .Values.tasksUtils.artIntegration }}
            - name: {{ .Values.tasksUtils.gitIntegration }}
            {{ .Values.taskToTest }}
            {{ get .Values.tasksMetadata ".Values.taskToTest" }}
            {{ $taskToTest := .Values.taskToTest }}
            {{ $taskToTest }}
            {{ get .Values.tasksMetadata "$taskToTest" }}            
            {{- range $int := (get .Values.tasksMetadata $taskToTest).taskIntegrations }}
            - name: {{ $int }}
            {{- end }}
        execution:
          onStart:
            # Dont remove because onStart must be array.
            - echo "Checking task's type for onStart."
            {{- if eq .Values.tasksMetadata.pipelinesTriggerStep.type "go" }}
            - echo "Found go task, setting it up."
            # Do I need the setup-go for the dev probably yes.
            - task: jfrog/setup-go@v0.0.3
              input:
                version: 1.19.5
            - export GOPROXY="https://${int_{{ .Values.tasksUtils.artIntegration }}_user}:${int_{{ .Values.tasksUtils.artIntegration }}_apikey}@entplus.jfrog.io/artifactory/api/go/pipe-go-tasks-virtual"
            - export GONOSUMDB="github.com/jfrog/*"
            {{- end }}
          onExecute:
            - echo "Checking task's type for onExecute."

            {{- if eq .Values.tasksMetadata.pipelinesTriggerStep.type "go" }}
            - pushd "${res_jfdev_ci_commons_tasks_gitrepo_resourcePath}/.jfrog-pipelines/tasks/pipelines-trigger-step"
            - go get .
            - make test
            - make build-all
            - popd

            {{- else if eq .Values.tasksMetadata.pipelinesTriggerStep.type "js" }}
            - echo "Building node task..."
            - jfrog npmc --repo-resolve {{ .Values.tasksUtils.npmResolveRepo }}
            - jfrog npm install
            - npm run test
            - npm run dist
            {{- end }}

            - taskPath="${res_jfdev_ci_commons_tasks_gitrepo_resourcePath}/.jfrog-pipelines/tasks/pipelines-trigger-step"

            - onExePreTaskPath="${taskPath}/onExecutePreTask.sh"
            - |
              if [ -f "${onExePreTaskPath}" ]; then
                source "${onExePreTaskPath}"
              fi

            # Test the task's execution from source code
            - task: $res_jfdev_ci_commons_tasks_gitrepo_resourcePath/.jfrog-pipelines/tasks/pipelines-trigger-step
              id: {{ .Values.tasksMetadata.pipelinesTriggerStep.id }}
              input:
                {{- range $input := .Values.tasksMetadata.pipelinesTriggerStep.taskInputs }}
                {{ $input }}
                {{- end }}

            - onExePostTaskPath="${taskPath}/onExecutePostTask.sh"
            - |
              if [ -f "${onExePostTaskPath}" ]; then
                source "${onExePostTaskPath}"
              fi

            - TASK_VERSION="0.0.0-dev-$(date +'%Y%m%d%H%M%S')"

            # Publish task to dev ci next tasks repo.
            - task: jfrog/publish-task@v0.0.5
              input:
                #path: $res_jfdev_ci_commons_tasks_gitrepo_resourcePath/.jfrog-pipelines/tasks/{{ .Values.taskToTest }}
                path: $res_jfdev_ci_commons_tasks_gitrepo_resourcePath/.jfrog-pipelines/tasks/pipelines-trigger-step
                targetRepository: {{ .Values.tasksUtils.devTaskTargetRepo }}
                #taskName: jfdev-ci-commons/{{ .Values.taskToTest }}
                taskName: jfdev-ci-commons/pipelines-trigger-step
                taskVersion: $TASK_VERSION
                {{- if eq .Values.tasksMetadata.pipelinesTriggerStep.type "go" }}
                # Can read includePattern from values.yml if needed.
                includePattern: ^README.md$|^bin
                {{- end }}

            # Publish task to dev ci next tasks repo. Publish task 0.0.6 supporting latest task layout (supporting pipelines version 1.35 and above), need to remove 0.0.5 once repo21 meets pipelines 1.35.x version.
            - task: jfrog/publish-task@v0.0.6
              input:
                #path: $res_jfdev_ci_commons_tasks_gitrepo_resourcePath/.jfrog-pipelines/tasks/{{ .Values.taskToTest }}
                path: $res_jfdev_ci_commons_tasks_gitrepo_resourcePath/.jfrog-pipelines/tasks/pipelines-trigger-step
                targetRepository: {{ .Values.tasksUtils.devTaskTargetRepo }}
                #taskName: jfdev-ci-commons/{{ .Values.taskToTest }}
                taskName: jfdev-ci-commons/pipelines-trigger-step
                taskVersion: $TASK_VERSION
                {{- if eq .Values.tasksMetadata.pipelinesTriggerStep.type "go" }}
                # Can read includePattern from values.yml if needed.
                includePattern: ^README.md$|^bin
                {{- end }}
